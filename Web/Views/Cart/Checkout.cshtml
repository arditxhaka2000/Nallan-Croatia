@{
    string currentLanguage = ViewContext.RouteData.Values["lang"].ToString();
    var externalBase = "https://nallan.eu/products";
    var internalBase = "/Products";
    var sharedRes = ViewData["Shared"] as Dictionary<string, string>;
}

<style>
    /* Mobile-first responsive design */
    .checkout-container {
        padding: 15px;
        margin: 0;
    }

    .mobile-card {
        border-radius: 12px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        margin-bottom: 20px;
        border: none;
    }

    .mobile-card-header {
        background: #f8f9fa;
        color: #495057;
        border-radius: 12px 12px 0 0 !important;
        padding: 15px 20px;
        border: none;
        border-bottom: 1px solid #e9ecef;
    }

        .mobile-card-header h5 {
            margin: 0;
            font-weight: 500;
            font-size: 1.1rem;
        }

    /* Form styling */
    .form-group-mobile {
        margin-bottom: 20px;
    }

        .form-group-mobile label {
            font-weight: 500;
            color: #333;
            margin-bottom: 8px;
            display: block;
            font-size: 0.9rem;
        }

    .form-control-mobile {
        border: 2px solid #e9ecef;
        border-radius: 8px;
        padding: 12px 15px;
        font-size: 16px; /* Prevents zoom on iOS */
        transition: all 0.3s ease;
        width: 100%;
    }

        .form-control-mobile:focus {
            border-color: #00B3B7;
            box-shadow: 0 0 0 0.2rem rgba(0, 179, 183, 0.15);
            outline: none;
        }

    .form-select-mobile {
        border: 2px solid #e9ecef;
        border-radius: 8px;
        padding: 12px 15px;
        font-size: 16px;
        background: white;
        transition: all 0.3s ease;
        width: 100%;
        appearance: none;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
        background-position: right 12px center;
        background-repeat: no-repeat;
        background-size: 16px 12px;
        padding-right: 40px;
    }

        .form-select-mobile:focus {
            border-color: #00B3B7;
            box-shadow: 0 0 0 0.2rem rgba(0, 179, 183, 0.15);
            outline: none;
        }

    /* Cart item cards for mobile */
    .cart-item-mobile {
        background: white;
        border-radius: 12px;
        padding: 15px;
        margin-bottom: 15px;
        box-shadow: 0 2px 6px rgba(0,0,0,0.08);
        border: 1px solid #f0f0f0;
    }

    .cart-item-image {
        max-width: 80px;
        max-height: 80px;
        border-radius: 8px;
        object-fit: cover;
    }

    .cart-item-details h6 {
        font-size: 1rem;
        font-weight: 600;
        margin-bottom: 5px;
        color: #333;
        line-height: 1.3;
    }

    .cart-item-meta {
        font-size: 0.85rem;
        color: #666;
        margin-bottom: 3px;
    }

    .cart-item-price {
        font-size: 1.1rem;
        font-weight: 600;
        color: #00B3B7;
    }

    .cart-total-row {
        background: #f8f9fa;
        padding: 12px 15px;
        border-radius: 8px;
        margin-bottom: 10px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .cart-total-label {
        font-weight: 500;
        color: #333;
    }

    .cart-total-value {
        font-weight: 600;
        color: #333;
    }

    .cart-final-total {
        background: linear-gradient(135deg, #00B3B7 0%, #008B8D 100%);
        color: white;
        font-size: 1.1rem;
    }

    /* Button styling */
    .btn-mobile-primary {
        background: linear-gradient(135deg, #00B3B7 0%, #008B8D 100%);
        border: none;
        border-radius: 12px;
        padding: 15px 25px;
        font-size: 1rem;
        font-weight: 600;
        color: white;
        width: 100%;
        transition: all 0.3s ease;
        box-shadow: 0 4px 12px rgba(0, 179, 183, 0.3);
    }

        .btn-mobile-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(0, 179, 183, 0.4);
            color: white;
        }

        .btn-mobile-primary:active {
            transform: translateY(0);
        }

    /* Alert styling */
    .mobile-alert {
        border-radius: 12px;
        padding: 15px 20px;
        margin-bottom: 20px;
        border: none;
    }

    .mobile-alert-success {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        color: white;
    }

    .mobile-alert-danger {
        background: linear-gradient(135deg, #dc3545 0%, #fd7e14 100%);
        color: white;
    }

    /* Responsive grid */
    .mobile-form-row {
        display: grid;
        gap: 20px;
        margin-bottom: 25px;
    }

    @@media (min-width: 576px) {
        .mobile-form-row

    {
        grid-template-columns: 1fr 1fr;
    }

    }

    @@media (min-width: 768px) {
        .mobile-form-row

    {
        grid-template-columns: 1fr 1fr 1fr;
    }

    .checkout-container {
        padding: 30px;
    }

    }

    /* Desktop table - hide on mobile */
    .desktop-cart-table {
        display: none;
    }

    @@media (min-width: 992px) {
        .desktop-cart-table

    {
        display: block;
    }

    .mobile-cart-items {
        display: none;
    }

    }

    /* Sticky footer on mobile */
    .mobile-sticky-footer {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        background: white;
        padding: 15px;
        box-shadow: 0 -4px 12px rgba(0,0,0,0.1);
        border-top: 1px solid #e9ecef;
        z-index: 1000;
    }

    @@media (min-width: 992px) {
        .mobile-sticky-footer

    {
        display: none;
    }

    }

    /* Desktop footer - inside card */
    .desktop-card-footer {
        display: none;
    }

    @@media (min-width: 992px) {
        .desktop-card-footer

    {
        display: block;
        padding: 20px 25px;
        background: #f8f9fa;
        border-top: 1px solid #e9ecef;
        border-radius: 0 0 12px 12px;
    }

    .desktop-card-footer .btn {
        background: linear-gradient(135deg, #00B3B7 0%, #008B8D 100%);
        border: none;
        border-radius: 8px;
        padding: 12px 30px;
        font-weight: 600;
        color: white;
        transition: all 0.3s ease;
        box-shadow: 0 2px 8px rgba(0, 179, 183, 0.3);
    }

        .desktop-card-footer .btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(0, 179, 183, 0.4);
            color: white;
        }

    }

    /* Add padding to body when sticky footer is active */
    .mobile-body-padding {
        padding-bottom: 100px;
    }

    @@media (min-width: 992px) {
        .mobile-body-padding

    {
        padding-bottom: 0;
    }

    }
</style>

<div class="page-body checkout mobile-body-padding" style="margin-left:0 !important">
    <div class="container-fluid checkout-container">
        <!-- Success Alert -->
        <div id="order-alert" class="mobile-alert mobile-alert-success" role="alert" style="display: none;">
            @sharedRes.CheckKey("OrderCompleted")
            <button type="button" class="btn-close btn-close-white" onclick="this.parentElement.style.display='none'" aria-label="Close"></button>
        </div>

        <!-- Error Alert -->
        <div id="itemMsg" class="mobile-alert mobile-alert-danger" style="display: none;"></div>

        @using (Html.BeginForm("CreateOrder", "Order", FormMethod.Post, new { id = "checkoutForm", @class = "needs-validation", novalidate = "novalidate" }))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="currentLanguage" value="@currentLanguage" />

            <!-- Billing Details Card -->
            <div class="card mobile-card">
                <div class="card-header mobile-card-header">
                    <h5>@sharedRes.CheckKey("BillingDetails")</h5>
                </div>
                <div class="card-body" style="padding: 25px;">
                    <!-- Row 1: Name, Phone, Email -->
                    <div class="mobile-form-row">
                        <div class="form-group-mobile">
                            <label for="CustomerName">@sharedRes.CheckKey("FullName") *</label>
                            <input class="form-control-mobile" id="CustomerName" type="text" name="CustomerName" placeholder="@(currentLanguage == "hr" ? "Unesite vaše puno ime" : "Enter your full name")" required>
                        </div>
                        <div class="form-group-mobile">
                            <label for="PhoneNumber">@sharedRes.CheckKey("Phone") *</label>
                            <input class="form-control-mobile" id="PhoneNumber" type="tel" name="PhoneNumber" placeholder="@(currentLanguage == "hr" ? "Unesite broj telefona" : "Enter phone number")" required>
                        </div>
                        <div class="form-group-mobile">
                            <label for="CustomerEmail">@sharedRes.CheckKey("Email") *</label>
                            <input class="form-control-mobile" id="CustomerEmail" type="email" name="CustomerEmail" placeholder="@(currentLanguage == "hr" ? "Unesite email adresu" : "Enter email address")" required>
                        </div>
                    </div>

                    <!-- Row 2: Country, Address, City -->
                    <div class="mobile-form-row">
                        <div class="form-group-mobile">
                            <label for="inputState">@sharedRes.CheckKey("Country") *</label>
                            <select class="form-select-mobile" id="inputState" name="ShipingCountry" required>
                                <option value="" disabled selected>@(currentLanguage == "hr" ? "Odaberite zemlju..." : "Choose country...")</option>
                                <option value="Hrvatska">Hrvatska</option>
                            </select>
                        </div>
                        <div class="form-group-mobile">
                            <label for="ShippingAddress">@sharedRes.CheckKey("Address") *</label>
                            <input class="form-control-mobile" id="ShippingAddress" type="text" name="ShippingAddress" placeholder="@(currentLanguage == "hr" ? "Ulica i broj" : "Street address")" required>
                        </div>
                        <div class="form-group-mobile">
                            <label for="ShippingCity">@sharedRes.CheckKey("City") *</label>
                            <input class="form-control-mobile" id="ShippingCity" type="text" name="ShippingCity" placeholder="@(currentLanguage == "hr" ? "Naziv grada" : "City name")" required>
                        </div>
                    </div>

                    <!-- Row 3: Postal Code, Payment Method -->
                    <div class="mobile-form-row">
                        <div class="form-group-mobile">
                            <label for="ShippingPostalCode">@sharedRes.CheckKey("PostalCode") *</label>
                            <input class="form-control-mobile" id="ShippingPostalCode" type="text" name="ShippingPostalCode" placeholder="@(currentLanguage == "hr" ? "Poštanski broj" : "Postal code")" required>
                        </div>
                        <div class="form-group-mobile">
                            <label for="PaymentMethoId">@sharedRes.CheckKey("PaymentMethod") *</label>
                            <select class="form-select-mobile" id="PaymentMethoId" name="PaymentType" required>
                                <option value="" disabled selected>@(currentLanguage == "hr" ? "Odaberite način plaćanja..." : "Choose payment method...")</option>
                                <option value="CASH">@sharedRes.CheckKey("PayOnDelivery")</option>
                                <option value="BANK">BANK</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Cart Items Card -->
            <div class="card mobile-card">
                <div class="card-header mobile-card-header">
                    <h5>@sharedRes.CheckKey("YourOrder")</h5>
                </div>
                <div class="card-body" style="padding: 25px;">
                    @if (Model.CartItems != null && Model.CartItems.Count>0)
                    {
                        int i = 0;
                        decimal cartTotal = 0;

                        <!-- Mobile Cart Items -->
                        <div class="mobile-cart-items">
                            @foreach (var item in Model.CartItems)
                            {
                                var total = (item.Price * item.Quantity);
                                cartTotal += total;

                                <!-- Hidden form fields -->
                                <input type="hidden" value="@item.ProductName" name="CartItems[@i].ProductName" />
                                <input type="hidden" value="@item.ImagePath" name="CartItems[@i].ImagePath" />
                                <input type="hidden" value="@item.ProductId" name="CartItems[@i].ProductId" />
                                <input type="hidden" value="@item.Quantity" name="CartItems[@i].Quantity" />
                                <input type="hidden" value="@item.Price" name="CartItems[@i].Price" />
                                <input type="hidden" value="@item.SelectedSize" name="CartItems[@i].SelectedSize" />

                                <div class="cart-item-mobile">
                                    <div class="d-flex align-items-start gap-3">
                                        <img class="cart-item-image" src="@Url.Content(item.ImagePath.Replace(externalBase, internalBase))" alt="@item.ProductName">
                                        <div class="cart-item-details flex-grow-1">
                                            <h6>@item.ProductName</h6>
                                            <div class="cart-item-meta">Code: @item.ProductCode</div>
                                            <div class="cart-item-meta">Size: @item.SelectedSize</div>
                                            <div class="cart-item-meta">Qty: @item.Quantity</div>
                                        </div>
                                        <div class="text-end">
                                            <div class="cart-item-price">@total €</div>
                                            <small class="text-muted">@item.Price € each</small>
                                        </div>
                                    </div>
                                </div>
                                i++;
                            }

                            <!-- Totals -->
                            <div class="mt-4">
                                <div class="cart-total-row">
                                    <span class="cart-total-label">@sharedRes.CheckKey("Transport"):</span>
                                    <span class="cart-total-value" id="mobileTransportCost">5 €</span>
                                </div>
                                <div class="cart-total-row">
                                    <span class="cart-total-label">@sharedRes.CheckKey("SubTotal"):</span>
                                    <span class="cart-total-value">@cartTotal €</span>
                                </div>
                                <div class="cart-total-row cart-final-total">
                                    <span class="cart-total-label">@sharedRes.CheckKey("TotalPrice"):</span>
                                    <span class="cart-total-value" id="mobileTotPrice">@(cartTotal + 5) €</span>
                                </div>
                            </div>
                            <input type="hidden" value="@cartTotal" id="totalPricee" />
                        </div>

                        <!-- Desktop Table (hidden on mobile) -->
                        <div class="desktop-cart-table">
                            <div class="table-responsive">
                                <table class="table table-bordered">
                                    <thead>
                                        <tr>
                                            <th>@sharedRes.CheckKey("Product")</th>
                                            <th>@sharedRes.CheckKey("ProductName")</th>
                                            <th>@sharedRes.CheckKey("ProductCode")</th>
                                            <th>@sharedRes.CheckKey("Size")</th>
                                            <th>@sharedRes.CheckKey("Price")</th>
                                            <th>@sharedRes.CheckKey("Quantity")</th>
                                            <th>@sharedRes.CheckKey("Total")</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            i = 0;
                                            cartTotal = 0;
                                            foreach (var item in Model.CartItems)
                                            {
                                                var total = (item.Price * item.Quantity);
                                                cartTotal += total;
                                                <tr>
                                                    <input type="hidden" value="@item.ProductName" name="CartItems[@i].ProductName" />
                                                    <input type="hidden" value="@item.ImagePath" name="CartItems[@i].ImagePath" />
                                                    <input type="hidden" value="@item.ProductId" name="CartItems[@i].ProductId" />
                                                    <input type="hidden" value="@item.Quantity" name="CartItems[@i].Quantity" />
                                                    <input type="hidden" value="@item.Price" name="CartItems[@i].Price" />
                                                    <input type="hidden" value="@item.SelectedSize" name="CartItems[@i].SelectedSize" />
                                                    <td><img class="img-fluid img-40" src="@Url.Content(item.ImagePath.Replace(externalBase, internalBase))" alt="#"></td>
                                                    <td>
                                                        <div class="product-name">
                                                            <h6>@item.ProductName</h6>
                                                        </div>
                                                    </td>
                                                    <td>@item.ProductCode</td>
                                                    <td>@item.SelectedSize</td>
                                                    <td>@item.Price</td>
                                                    <td>@item.Quantity</td>
                                                    <td>@total</td>
                                                </tr>
                                                i++;
                                            }
                                        }
                                        <tr>
                                            <td colspan="5"></td>
                                            <td class="total-amount">
                                                <h6 class="m-0 text-end"><span class="f-w-600">@sharedRes.CheckKey("Transport") :</span></h6>
                                            </td>
                                            <td>
                                                <span id="transportCost">5 €</span>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td colspan="5"></td>
                                            <td class="total-amount">
                                                <h6 class="m-0 text-end"><span class="f-w-600">@sharedRes.CheckKey("SubTotal") :</span></h6>
                                            </td>
                                            <td><span>@cartTotal €</span></td>
                                        </tr>
                                        <tr>
                                            <td colspan="5"></td>
                                            <td class="total-amount">
                                                <h6 class="m-0 text-end"><span class="f-w-600">@sharedRes.CheckKey("TotalPrice") :</span></h6>
                                            </td>
                                            <td>
                                                <input type="hidden" value="@cartTotal" id="totalPricee" />
                                                <span id="totPrice">@(cartTotal + 5) €</span>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fa fa-shopping-cart fa-3x text-muted mb-3"></i>
                            <h5>@sharedRes.CheckKey("EmptyCart")</h5>
                            <p class="text-muted">@sharedRes.CheckKey("AddProducts")</p>
                            <a href="@Url.Action("Index", "Product", new { lang = currentLanguage })" class="btn btn-primary">@sharedRes.CheckKey("StartShopping")</a>
                        </div>
                    }
                </div>

                <!-- Desktop Card Footer -->
                <div class="desktop-card-footer">
                    <div class="d-flex justify-content-end">
                        <button type="button" class="btn me-2" id="OrderSubmit">
                            @sharedRes.CheckKey("SubmitOrder")
                        </button>
                        <button type="button" class="btn" style="display:none;" id="OrderSubmitBank">
                            Vazhdo tek pagesa
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Sticky Footer for Mobile -->
    <div class="mobile-sticky-footer">
        <button type="button" class="btn-mobile-primary" id="OrderSubmit">
            @sharedRes.CheckKey("SubmitOrder")
        </button>
        <button type="button" class="btn-mobile-primary" style="display:none;" id="OrderSubmitBank">
            Vazhdo tek pagesa
        </button>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Debug CSRF token
            var token = $('input[name="__RequestVerificationToken"]').val();
            console.log('🔍 [DEBUG] CSRF Token on page load:', token);

            // Form validation enhancement for mobile
            $('.form-control-mobile, .form-select-mobile').on('blur', function() {
                if (this.checkValidity()) {
                    $(this).removeClass('is-invalid').addClass('is-valid');
                } else {
                    $(this).removeClass('is-valid').addClass('is-invalid');
                }
            });

            // Remove validation classes on focus
            $('.form-control-mobile, .form-select-mobile').on('focus', function() {
                $(this).removeClass('is-valid is-invalid');
            });

            // Mobile-specific enhancements
            if (window.innerWidth <= 768) {
                // Add haptic feedback for mobile buttons (if supported)
                $('.btn-mobile-primary').on('touchstart', function() {
                    if (navigator.vibrate) {
                        navigator.vibrate(10);
                    }
                });

                // Smooth scroll to form errors
                $('.form-control-mobile, .form-select-mobile').on('invalid', function() {
                    setTimeout(() => {
                        this.scrollIntoView({ behavior: 'smooth', block: 'center' });
                    }, 100);
                });
            }
        });

        // Transport cost calculation (if needed)
        $('#inputState').on('change', function() {
            var country = $(this).val();
            var transportCost = 0;

            // Calculate transport cost based on country
            switch(country) {
                case 'Kosovë':
                    transportCost = 0;
                    break;
                case 'Shqipëri':
                    transportCost = 5;
                    break;
                case 'Maqedoni':
                    transportCost = 7;
                    break;
            }

            $('#transportCost').text(transportCost === 0 ? 'Free' : transportCost + ' €');

            // Update total price
            var subtotal = parseFloat($('#totalPricee').val()) || 0;
            var total = subtotal + transportCost;
            $('#totPrice').text(total.toFixed(2) + ' €');
        });
    </script>
    <script src="/assets/js/form-validation-custom.js"></script>
    <script src="/js/order/orders.js"></script>

    <style>
        /* Form validation styles */
        .form-control-mobile.is-valid,
        .form-select-mobile.is-valid {
            border-color: #28a745;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='%2328a745' viewBox='0 0 16 16'%3E%3Cpath d='M12.736 3.97a.733.733 0 0 1 1.047 0c.286.289.29.756.01 1.05L7.88 12.01a.733.733 0 0 1-1.065.02L3.217 8.384a.757.757 0 0 1 0-1.06.733.733 0 0 1 1.047 0l3.052 3.093 5.4-6.425a.247.247 0 0 1 .02-.022Z'/%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-position: right 12px center;
            background-size: 16px 12px;
        }

        .form-control-mobile.is-invalid,
        .form-select-mobile.is-invalid {
            border-color: #dc3545;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='%23dc3545' viewBox='0 0 16 16'%3E%3Cpath d='M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z'/%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-position: right 12px center;
            background-size: 16px 12px;
        }
    </style>
}